-Related web documents(github-
https://gist.github.com/hvanderlaan/ae5d7f62d42c927fdad42309d25c9693

1.Using host_vars.
When we want to connect to managed servers with ssh key method and su - another user and execute command.


[vagrant@kubemaster .ansible]$ mkdir host_vars
[vagrant@kubemaster .ansible]$ touch host_vars/k8snfs
[vagrant@kubemaster .ansible]$ ping k8snfs
PING k8snfs (10.1.0.6) 56(84) bytes of data.
64 bytes from k8snfs (10.1.0.6): icmp_seq=1 ttl=64 time=1.15 ms
^C
--- k8snfs ping statistics ---
1 packets transmitted, 1 received, 0% packet loss, time 0ms
rtt min/avg/max/mdev = 1.151/1.151/1.151/0.000 ms


[vagrant@kubemaster .ansible]$ vi host_vars/k8snfs 
[vagrant@kubemaster .ansible]$ cat host_vars/k8snfs 
---
ansible_ssh_user: vagrant
ansible_ssh_private_key_file: ~/.ssh/id_rsa
ansible_become: yes
ansible_become_user: ping
ansible_become_method: su
ansible_become_pass: 8Passwor8dS7ecre$%`t!

#Encrypting host_vars/k8snfs
[vagrant@kubemaster .ansible]$ ansible-vault encrypt host_vars/k8snfs 
New Vault password: 
Confirm New Vault password: 
Encryption successful
[vagrant@kubemaster .ansible]$ 
[vagrant@kubemaster .ansible]$ cat host_vars/k8snfs 
$ANSIBLE_VAULT;1.1;AES256
34313332663665646232383034663839336466313737633262663763386131316164386330396565
3963653036376566326232336238666236326431623330380a373662393465663631316137653738
65326232643865346663666662393831303833633165666661393834316433323838363363346435
3638643935376430360a393135383530396135636634666336623539633533356337633063343965
39656631656465366237303666316362343766613939323364343238383036373630303763373839
64343132633462323732613465363131323939353362306534343037663961386538643534396233
37323865336561646263323164336534333431643438386230323063626434346233363665303434
62653933303932303737306463613331343732636330643965623631663739623038353237393233
38316132303263656436633066373334343163663965386138633835633263323931303137356331
39636136326638313664386239373337333566613236303533353137363738323839326137356539
36323730326564303264363538623731343930646464333062633461303533656132646432323136
66366337626237323835376265356137376331346162386231386431613334386331663834343766
30333336393039383065336662323139306635396137343566356131623836333430

#I am going to use role system that is basic system infomation of limits.conf.
[vagrant@kubemaster .ansible]$ vi system.yml 
[vagrant@kubemaster .ansible]$ cat system.yml 
- hosts: k8snfs
  roles:
    - system


[vagrant@kubemaster .ansible]$ cat roles/system/tasks/nofile.sh 
#!/usr/bin/env bash
DSVALUE="unlimited"
LIMIT="/proc/1/limits"
NFHARD=$(cat $LIMIT | grep -i "Max open files" | awk '{print $5}')
NFSOFT=$(cat $LIMIT | grep -i "Max open files" | awk '{print $4}')
if [[ ($NFSOFT == $DSVALUE) || ($NFSOFT -ge 65535)  ]]
then
  echo  "ulimit -n SOFT VALUE IS $NFSOFT"
  echo  "This value is GOOD"
else
  echo "SOFT NFS VALUE IS NOT GOOD. BETTER CONSIDER CHANGING"
fi

echo "ulimit -n HARD VALUE IS $NFHARD"
[vagrant@kubemaster .ansible]$ 


[vagrant@kubemaster .ansible]$ cat roles/system/tasks/main.yml
---
- name: Getting ulimit -n value nofile, number of file
  script: ./nofile.sh
  register: nofile

- debug: msg="{{ nofile.stdout }}"
- debug: msg="{{ nofile.stderr }}"


#Now finally execute this role.
[vagrant@kubemaster .ansible]$ ansible-playbook system.yml --ask-vault-pass
Vault password: 

PLAY [k8snfs] ***************************************************************************************

TASK [Gathering Facts] ******************************************************************************
ok: [k8snfs]

TASK [system : Getting ulimit -n value nofile, number of file] **************************************
changed: [k8snfs]

TASK [system : debug] *******************************************************************************
ok: [k8snfs] => {
    "msg": "\r\nulimit -n SOFT VALUE IS 65536\r\nThis value is GOOD\r\nulimit -n HARD VALUE IS 65536\r\n"
}

TASK [system : debug] *******************************************************************************
ok: [k8snfs] => {
    "msg": "Shared connection to k8snfs closed.\r\n"
}

PLAY RECAP ******************************************************************************************
k8snfs                     : ok=4    changed=1    unreachable=0    failed=0   



#!This method is more secure below --vaule-password-file option.






2. Using group_vars using --vault-password-file. Not secure because password file is in ansible directory.
Movint this file to another directory also might be not as secure as using command input method.

Create group_vars directory
[vagrant@kubemaster .ansible]$ mkdir group_vars

Create group_vars/infra ansible variables
[vagrant@kubemaster .ansible]$ vi group_vars/infra
---
ansible_ssh_user: vagrant
ansible_ssh_pass: vagrant
ansible_become: yes
ansible_become_user: root


Create password

[vagrant@kubemaster .ansible]$ openssl rand -base64 2048 > sshcon



Encrypt group_vars/infra file with above password.

[vagrant@kubemaster .ansible]$ ansible-vault encrypt group_vars/infra --vault-password-file=sshcon
Encryption successful
[vagrant@kubemaster .ansible]$ 


#Create group infor with ansible-nodes
[vagrant@kubemaster .ansible]$ vi hosts
[infra]
k8snfs
dockerlocalg


[vagrant@kubemaster .ansible]$ ansible-galaxy install geerlingguy.nginx

                                                                                                                                                   
~                   
For testing, create nginx.yml. Before this we should download related galaxy nginx role                       
[vagrant@kubemaster .ansible]$ vi nginx.yml 
[vagrant@kubemaster .ansible]$ cat nginx.yml 
- hosts: infra
  roles:
    - geerlingguy.nginx



[vagrant@kubemaster .ansible]$ ansible-playbook nginx.yml --vault-password-file=sshcon

TASK [geerlingguy.nginx : Ensure nginx is started and enabled to start at boot.] ********************************************************************
ok: [dockerlocalg]
changed: [k8snfs]

RUNNING HANDLER [geerlingguy.nginx : reload nginx] **************************************************************************************************
changed: [k8snfs]

PLAY RECAP ******************************************************************************************************************************************
dockerlocalg               : ok=11   changed=5    unreachable=0    failed=0   
k8snfs : ok=11 changed=5 unreachable=0 failed=0 
